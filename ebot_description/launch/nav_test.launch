<launch>
	<arg name="gui" default="true"/>
	<arg name="rviz_gui" default="true"/>
	<arg name="services" default="false"/>
<!--   ebot -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ebot_description)/urdf/ebot.xacro'"/>

<!--   test1 world for testing your navigation stack in small simulation world-->
	<include file="$(find ebot_gazebo)/launch/packaging_assist_cam.launch">
		<arg name="gui" value="$(arg gui)"/>
	</include>

	<arg name="x" default="0"/>
	<arg name="y" default="0"/>
	<arg name="z" default="0"/>
	<arg name="r" default="0"/>
	<arg name="p" default="0"/>
	<arg name="ya" default="0"/>	
		

<!-- Spawn the robot model -->
	<node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" 
	    args="-urdf -param robot_description -model ebot -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg r) -P $(arg p) -Y $(arg ya)" />

		
<!-- include your navigation launch file  -->		

<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/> 
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
	<param name="use_gui" value="False" />
</node> 
<group if="$(arg rviz_gui)">
	 <node name="rviz" pkg="rviz" type="rviz"   args=" -d $(find ebot_description)/rviz/ebot_visualize.rviz" />
</group>

<include file="$(find ebot_nav)/launch/navigation.launch">
	<arg name="x" value="$(arg x)"/>
	<arg name="y" value="$(arg y)"/>
	<arg name="a" value="$(arg ya)"/>
</include>

 <node name="transform_service" pkg="perception" type="transform_service.py"/>   
<node name="print_move_base_goal" pkg="ebot_nav" type="print_move_base_goal.py" output="screen"/>

</launch>
